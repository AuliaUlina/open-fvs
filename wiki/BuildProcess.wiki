#summary Current build information

=Build Process=

This Wiki entry documents the build process that is currently available from the sources in open-fvs.

FVS programs are built in the bin directory. The basic approach is to identify the _program_ (which will automatically be built into a program and a _shared library_, see below) you want and use a `make` command to build it (also see [NewMakeFile]).

FVS programs are a combination of an FVS regional _variant_ and one or more _extensions_. A variant is a region-specific version of the core program and an extension adds functions to the core program.

The currently available programs are:

  * FVSiec  the Inland Empire variant plus the Fire and Fuels Extension (FFE) and the Econ and Climate Extensions.
  * FVSpnc - The Pacific Northwest variant plus FFE and the Econ and Climate Extensions. 
  * FVSne  The northeast US variant plus FFE and Econ Extensions.
  * FVSsn  The southern US variant plus FFE and Econ Extensions. 

Additional programs will be available as team members build the corresponding "sourceList" files.

==Platforms==

The open-fvs community includes people who routinely build on Windows-32 (under Windows XP and Win7), generic Linux (x86_64), and MAC OSX (x86_64). 

==Build Tools==

FVS requires C-language and Fortran compilers. We support builds using gcc version 4.2+ and gfortran version 4.5+. Older compilers are known not to work.

To build under *Windows*, we suggest using the same tools the R community use to build R. These tools are know as the Rtools toolkit and it is available from [http://cran.r-project.org/bin/windows/Rtools/]. We recommend using [http://cran.r-project.org/bin/windows/Rtools/Rtools215.exe]. You may have to set up your environment variables.

==Build==

To make any of the programs listed above, enter the program name (and suffix, as needed) as in this example for Windows:

{{{
make FVSiec.exe
}}}

For other systems, leave off the suffix.  

{{{
make FVSiec
}}}

To remove all the programs, object files, and build directories, enter:

{{{
make clean
}}}

Note that the build process makes an FVS _program_ file and an FVS shared library. On Windows, an additional library is built libfvsSQL.dll. When running an FVS program, the operating system must be able to find that library. This is not a problem with Windows so long as the library and the program are stored in the same directory. 

==FVS as a Shared Library==

FVS programs are linked into program files and also as _shared libraries_. The file suffix for these libraries is `.dll` on Windows and `.so` on the other platforms. Having a shared library incarnation of FVS requires programmers to call the program elements in a useful way. That topic is covered in a separate Wiki page on the [FVS_API].